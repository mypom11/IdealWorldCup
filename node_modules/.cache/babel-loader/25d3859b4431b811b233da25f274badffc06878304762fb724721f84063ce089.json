{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3999433e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"filebox\"\n};\nconst _hoisted_2 = {\n  for: \"ex_filename\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, [$data.preview == '' ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $props.picture,\n    class: \"normal\",\n    alt: \"\"\n  }, null, 8 /* PROPS */, _hoisted_3)) : (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    src: $data.preview,\n    class: \"normal\"\n  }, null, 8 /* PROPS */, _hoisted_4))]), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"ex_filename\",\n    class: \"upload-hidden\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleChange && $options.handleChange(...args))\n  }, null, 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","for","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$data","preview","src","$props","picture","alt","type","id","onChange","_cache","args","$options","handleChange"],"sources":["/Users/jeongkimin/Desktop/portfolio/IdealWorldCup/client/src/components/FileComponent.vue"],"sourcesContent":["<template>\n  <div class=\"filebox\">\n    <label for=\"ex_filename\">\n      <img :src=\"picture\" class=\"normal\" v-if=\"preview == ''\" alt=\"\" />\n      <img :src=\"preview\" class=\"normal\" v-else />\n    </label>\n    <input\n      type=\"file\"\n      id=\"ex_filename\"\n      class=\"upload-hidden\"\n      @change=\"handleChange\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"InputFile\",\n  data() {\n    return {\n      preview: \"\",\n    };\n  },\n  props: {\n    picture: {\n      type: String,\n    },\n  },\n  methods: {\n    handleChange: function (event) {\n      var file = event.target.files[0];\n      if (file && file.type.match(/^image\\/(png|jpeg|jpg)$/)) {\n        this.preview = window.URL.createObjectURL(file);\n        this.$emit(\"upload\", file);\n      } else {\n        this.$store.commit(\"alert\", {\n          msg: \"지원하지 않는 형식의 파일입니다.\",\n          false: true,\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"@/assets/scss/_variables.scss\";\n\n.filebox {\n  width: 100%;\n  height: 100%;\n  &.art {\n    label {\n      min-width: 202px;\n      min-height: 170px;\n      height: auto;\n      max-height: 400px;\n    }\n  }\n  input[type=\"file\"] {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n  label {\n    @include flex(center, center);\n    width: 100%;\n    height: 100%;\n    padding: 10px;\n    cursor: pointer;\n    border-radius: 5px;\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAS;;EACXC,GAAG,EAAC;AAAa;;;;uBAD1BC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,mBAAA,CAGQ,SAHRC,UAGQ,GAFmCC,KAAA,CAAAC,OAAO,U,cAAhDL,mBAAA,CAAiE;;IAA3DM,GAAG,EAAEC,MAAA,CAAAC,OAAO;IAAEV,KAAK,EAAC,QAAQ;IAAsBW,GAAG,EAAC;wDAC5DT,mBAAA,CAA4C;;IAAtCM,GAAG,EAAEF,KAAA,CAAAC,OAAO;IAAEP,KAAK,EAAC;0CAE5BI,mBAAA,CAKE;IAJAQ,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,aAAa;IAChBb,KAAK,EAAC,eAAe;IACpBc,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}